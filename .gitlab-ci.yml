services:
  - docker:dind

stages:
  - test
  - build
  - integration
  - deploy

testMain:
  stage: test
  image: python:3.7.2-stretch
  before_script:
    - cd main
    - pip install -r requirements.txt
    - pip install -r test_requirements.txt
  script:
    - python project/manage.py test project --settings=webcrawler.test_settings

testCrawlerManager:
  stage: test
  image: python:3.7.2-stretch
  before_script:
    - cd crawler-manager
    - pip install -r requirements.txt
    - pip install -r test_requirements.txt
  script:
    - python -m unittest discover -p "*_test.py"

testCrawler:
  stage: test
  image: python:3.7.2-stretch
  before_script:
    - cd crawler
    - pip install -r requirements.txt
    - pip install -r test_requirements.txt
  script:
    - python -m unittest discover -p "*_test.py"

buildMain:
  stage: build
  image: docker:latest
  before_script:
    - apk add git bash nodejs nodejs-npm --no-cache
  script:
    - mkdir $HOME/.kube/
    - echo -e "$KUBE_CONFIG" > $HOME/.kube/config
    - ./buildMainImage
  only:
    - develop


buildCrawler:
  stage: build
  image: docker:latest
  before_script:
    - apk add git bash nodejs nodejs-npm --no-cache
  script:
    - ./buildCrawlerImage
  only:
    - develop


buildCrawlerManager:
  stage: build
  image: docker:latest
  before_script:
    - apk add git bash nodejs nodejs-npm --no-cache
  script:
    - mkdir $HOME/.kube/
    - echo -e "$KUBE_CONFIG" > $HOME/.kube/config
    - ./buildCrawlerManagerImage
  only:
    - develop

integration-tests:
  stage: integration
  image: python:3.7.3-alpine
  before_script:
    - apk add --no-cache curl wget tar bash
    - pip install requests==2.21.0
    - pip install kubernetes==9.0.0
    - ./cluster-setup/kube_setup
  script:
    - helm init --service-account tiller
    - helm upgrade --install --wait --set-string image.tag="$CI_PIPELINE_ID" --set-string application.namespace="development" 'main-application' ./cluster-templates/chart-main
    - sleep 60
    - python test.py
  only:
    - develop

kube_deploy:
  stage: deploy
  image: docker:latest
  before_script:
    - apk add --no-cache curl wget tar bash
    - ./cluster-setup/kube_setup
  script:
    - helm init --service-account tiller
    - helm upgrade --install --wait --set-string image.tag="$CI_PIPELINE_ID" 'main-application' ./cluster-templates/chart-main
    # The below won't deploy since the Crawler Manager and the Crawlers are "Jobs", only executed on demand.
    #- helm upgrade --install --wait --set-string image.tag="$CI_PIPELINE_ID" 'crawler-manager' ./cluster-templates/chart-manager
    #- helm upgrade --install --wait --set-string image.tag="$CI_PIPELINE_ID" --set replicaCount=1 'crawler' ./cluster-templates/chart-crawler
  only:
    - develop

