services:
  - docker:dind

stages:
  - test
  - build
  - deploy

testMain:
  stage: test
  image: python:3.7.2-stretch
  before_script:
    - cd main
    - pip install -r requirements.txt
    - pip install -r test_requirements.txt
  script:
    - python -m unittest discover -s tests -p "*_test.py"

testCrawlerManager:
  stage: test
  image: python:3.7.2-stretch
  before_script:
    - cd crawler-manager
    - pip install -r requirements.txt
    - pip install -r test_requirements.txt
  script:
    - python -m unittest discover -s tests -p "*_test.py"

testCrawler:
  stage: test
  image: python:3.7.2-stretch
  before_script:
    - cd crawler
    - pip install -r requirements.txt
    - pip install -r test_requirements.txt
  script:
    - python -m unittest discover -s tests -p "*_test.py"

buildMain:
  stage: build
  image: docker:latest
  before_script:
    - apk add git bash nodejs nodejs-npm --no-cache
  script:
    - ./buildMainImage
  only:
    - develop

buildCrawler:
  stage: build
  image: docker:latest
  before_script:
    - apk add git bash nodejs nodejs-npm --no-cache
  script:
    - ./buildCrawlerImage
  only:
    - develop


buildCrawlerManager:
  stage: build
  image: docker:latest
  before_script:
    - apk add git bash nodejs nodejs-npm --no-cache
  script:
    - ./buildCrawlerManagerImage
  only:
    - develop


kube_deploy:
  stage: deploy
  # image: docker:latest
  variables:
    DEPLOY_TAG: 53792562
  before_script:
    - apk add --no-cache curl wget tar bash
    - ./kube_setup
  script:
    - helm init
    - helm upgrade --install --wait --set-string image.tag="$DEPLOY_TAG" 'main-application' ./charts/chart-main
    - helm upgrade --install --wait --set-string image.tag="$DEPLOY_TAG" 'crawler-manager' ./charts/chart-manager
    - helm upgrade --install --wait --set-string image.tag="$DEPLOY_TAG" --set replicaCount=5 'crawler' ./charts/chart-crawler
  only:
    - test