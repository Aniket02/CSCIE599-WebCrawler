apiVersion: batch/v1
kind: Job
metadata:
  name: "crawler-manager-{{date "20060102150405" .Release.Time }}"
labels:
  app: crawler-manager
spec:
  template:
    metadata:
      name: crawler-manager
    spec:
      containers:
      - name: crawler-manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh","-c"]
        args: ["python app.py"]        
        env:
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: credentials
              key: REDIS_HOST
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: credentials
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: credentials
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: credentials
              key: DB_NAME
        - name: MYSQL_HOST
          valueFrom:
            secretKeyRef:
              name: credentials
              key: MYSQL_HOST
        - name: ENVIRONMENT
          value: "prod"
        - name: JOB_ID
          value: "{{ .Values.params.job_id }}"
        resources:
          requests:
            cpu: 200m
            memory: 640Mi
          limits:
            cpu: 500m
            memory: 700Mi
      restartPolicy: Never
      imagePullSecrets:
      - name: docker-gitlab
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: crawler-manager-service
#   labels:
#     app: crawler-manager
# spec:
#   type: {{ .Values.service.type }}
#   ports:
#   - port: {{ .Values.service.externalPort }}
#     targetPort: {{ .Values.service.internalPort }}
#     protocol: TCP
#     name: {{ .Values.service.name }}
#   selector:
#     app: crawler-manager